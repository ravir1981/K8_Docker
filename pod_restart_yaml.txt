=======================ALWAYS============================
kind: Pod
apiVersion: v1
metadata:
  name: mypod
  annotations:
    descriptions: This is verify pod restart
spec:
  containers:
    - name: cont1
      image: busybox
      command: ['sh', '-c', 'sleep 10']
  restartPolicy: Always
  
kubectl apply -f pod_restart.yaml
watch kubectl get pods
=====================OnFailure==============================
kind: Pod
apiVersion: v1
metadata:
  name: mypod
  annotations:
    descriptions: This is verify pod restart
spec:
  containers:
    - name: cont1
      image: busybox
      command: ['sh', '-c', 'sleep 10; Testing ']
  restartPolicy: OnFailure
  
kubectl create -f pod_restart.yaml
kubectl get pods --watch

===========Job=====================================
apiVersion: batch/v1
kind: Job
metadata:
  name: testjob
spec:
  template:
    metadata:
      name: testjob
    spec:
      containers:
      - name: counter
        image: centos:7
        command: ["bin/bash", "-c", "echo Practicing Jobs; sleep 5"]
      restartPolicy: Never
--------------
apiVersion: batch/v1
kind: Job
metadata:
  name: testjob
spec:
  parallelism: 5                           # Runs for pods in parallel
  activeDeadlineSeconds: 10  # Timesout after 30 sec
  template:
    metadata:
      name: testjob
    spec:
      containers:
      - name: counter
        image: centos:7
        command: ["bin/bash", "-c", "echo parallelism; sleep 20"]
      restartPolicy: Never
-------------
apiVersion: batch/v1
kind: CronJob
metadata:
 name: mycronjob
spec:
 schedule: "* * * * *"
 jobTemplate:
   spec:
     template:
       spec:
         containers:
         - image: ubuntu
           name: bhupi
           command: ["/bin/bash", "-c", "echo Scheduling the job; sleep 5"]
         restartPolicy: Never
=================


